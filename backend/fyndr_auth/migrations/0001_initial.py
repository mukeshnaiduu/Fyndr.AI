# Generated by Django 5.2.4 on 2025-07-18 09:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("job_seeker", "Job Seeker"),
                            ("recruiter", "Recruiter"),
                            ("employer", "Employer"),
                            ("administrator", "Administrator"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="JobSeekerOnboarding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(blank=True, max_length=30)),
                ("location", models.CharField(blank=True, max_length=100)),
                ("profile_image", models.URLField(blank=True)),
                ("linkedin_url", models.URLField(blank=True)),
                ("portfolio_url", models.URLField(blank=True)),
                ("resume_url", models.URLField(blank=True)),
                ("skills", models.JSONField(blank=True, default=list)),
                ("career_preferences", models.JSONField(blank=True, default=dict)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobseeker_onboarding",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RecruiterEmployerOnboarding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.CharField(max_length=255)),
                ("industry", models.CharField(max_length=100)),
                ("company_size", models.CharField(max_length=50)),
                ("website", models.URLField(blank=True)),
                ("description", models.TextField(blank=True)),
                ("logo", models.URLField(blank=True)),
                ("headquarters", models.CharField(blank=True, max_length=100)),
                ("founded_year", models.CharField(blank=True, max_length=10)),
                ("team_members", models.JSONField(blank=True, default=list)),
                ("invite_emails", models.JSONField(blank=True, default=list)),
                ("default_role", models.CharField(blank=True, max_length=50)),
                ("allow_invites", models.BooleanField(default=False)),
                ("require_approval", models.BooleanField(default=True)),
                ("activity_notifications", models.BooleanField(default=True)),
                ("dei_commitment", models.TextField(blank=True)),
                ("diversity_goals", models.JSONField(blank=True, default=list)),
                ("inclusion_policies", models.JSONField(blank=True, default=list)),
                ("compliance_requirements", models.JSONField(blank=True, default=list)),
                ("reporting_frequency", models.CharField(blank=True, max_length=50)),
                ("diversity_metrics", models.BooleanField(default=False)),
                ("anonymous_data", models.BooleanField(default=False)),
                ("bias_alerts", models.BooleanField(default=False)),
                ("selected_integrations", models.JSONField(blank=True, default=list)),
                ("hris_system", models.CharField(blank=True, max_length=100)),
                ("ats_system", models.CharField(blank=True, max_length=100)),
                ("selected_plan", models.CharField(blank=True, max_length=50)),
                ("billing_cycle", models.CharField(blank=True, max_length=20)),
                ("payment_method", models.CharField(blank=True, max_length=100)),
                ("billing_address", models.JSONField(blank=True, default=dict)),
                ("agree_to_terms", models.BooleanField(default=False)),
                ("marketing_emails", models.BooleanField(default=False)),
                ("sla_acknowledged", models.BooleanField(default=False)),
                ("final_confirmation", models.BooleanField(default=False)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recruiter_onboarding",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
